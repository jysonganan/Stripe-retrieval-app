import { AccordionProps } from "./internal/interface";
export declare const Accordion: "Accordion" & {
    readonly type?: "Accordion";
    readonly props?: AccordionProps;
    readonly children?: true;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/types").RemoteComponentType<"Accordion", AccordionProps, true>>;
import { AccordionItemProps } from "./internal/interface";
export declare const AccordionItem: "AccordionItem" & {
    readonly type?: "AccordionItem";
    readonly props?: AccordionItemProps;
    readonly children?: true;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/types").RemoteComponentType<"AccordionItem", AccordionItemProps, true>>;
import { BadgeProps } from "./internal/interface";
export declare const Badge: "Badge" & {
    readonly type?: "Badge";
    readonly props?: BadgeProps;
    readonly children?: true;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/types").RemoteComponentType<"Badge", BadgeProps, true>>;
import { BannerProps } from "./internal/interface";
export declare const Banner: "Banner" & {
    readonly type?: "Banner";
    readonly props?: BannerProps;
    readonly children?: true;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/types").RemoteComponentType<"Banner", BannerProps, true>>;
import { ButtonProps } from "./internal/interface";
export declare const Button: "Button" & {
    readonly type?: "Button";
    readonly props?: ButtonProps;
    readonly children?: true;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/types").RemoteComponentType<"Button", ButtonProps, true>>;
import { ButtonGroupProps } from "./internal/interface";
export declare const ButtonGroup: "ButtonGroup" & {
    readonly type?: "ButtonGroup";
    readonly props?: ButtonGroupProps;
    readonly children?: true;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/types").RemoteComponentType<"ButtonGroup", ButtonGroupProps, true>>;
import { CheckboxProps } from "./internal/interface";
export declare const Checkbox: "Checkbox" & {
    readonly type?: "Checkbox";
    readonly props?: CheckboxProps;
    readonly children?: true;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/types").RemoteComponentType<"Checkbox", CheckboxProps, true>>;
import { ChipProps } from "./internal/interface";
export declare const Chip: "Chip" & {
    readonly type?: "Chip";
    readonly props?: ChipProps;
    readonly children?: true;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/types").RemoteComponentType<"Chip", ChipProps, true>>;
import { ChipListProps } from "./internal/interface";
export declare const ChipList: "ChipList" & {
    readonly type?: "ChipList";
    readonly props?: ChipListProps;
    readonly children?: true;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/types").RemoteComponentType<"ChipList", ChipListProps, true>>;
import { DividerProps } from "./internal/interface";
export declare const Divider: "Divider" & {
    readonly type?: "Divider";
    readonly props?: DividerProps;
    readonly children?: true;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/types").RemoteComponentType<"Divider", DividerProps, true>>;
import { FormFieldGroupProps } from "./internal/interface";
export declare const FormFieldGroup: "FormFieldGroup" & {
    readonly type?: "FormFieldGroup";
    readonly props?: FormFieldGroupProps;
    readonly children?: true;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/types").RemoteComponentType<"FormFieldGroup", FormFieldGroupProps, true>>;
import { IconProps } from "./internal/interface";
export declare const Icon: "Icon" & {
    readonly type?: "Icon";
    readonly props?: IconProps;
    readonly children?: true;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/types").RemoteComponentType<"Icon", IconProps, true>>;
import { LinkProps } from "./internal/interface";
export declare const Link: "Link" & {
    readonly type?: "Link";
    readonly props?: LinkProps;
    readonly children?: true;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/types").RemoteComponentType<"Link", LinkProps, true>>;
import { MenuItemProps } from "./internal/interface";
export declare const MenuItem: "MenuItem" & {
    readonly type?: "MenuItem";
    readonly props?: MenuItemProps;
    readonly children?: true;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/types").RemoteComponentType<"MenuItem", MenuItemProps, true>>;
import { MenuGroupProps } from "./internal/interface";
export declare const MenuGroup: "MenuGroup" & {
    readonly type?: "MenuGroup";
    readonly props?: MenuGroupProps;
    readonly children?: true;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/types").RemoteComponentType<"MenuGroup", MenuGroupProps, true>>;
import { MenuProps } from "./internal/interface";
export declare const Menu: "Menu" & {
    readonly type?: "Menu";
    readonly props?: MenuProps;
    readonly children?: true;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/types").RemoteComponentType<"Menu", MenuProps, true>>;
import { NoticeProps } from "./internal/interface";
export declare const Notice: "Notice" & {
    readonly type?: "Notice";
    readonly props?: NoticeProps;
    readonly children?: true;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/types").RemoteComponentType<"Notice", NoticeProps, true>>;
import { RadioProps } from "./internal/interface";
export declare const Radio: "Radio" & {
    readonly type?: "Radio";
    readonly props?: RadioProps;
    readonly children?: true;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/types").RemoteComponentType<"Radio", RadioProps, true>>;
import { SelectProps } from "./internal/interface";
export declare const Select: "Select" & {
    readonly type?: "Select";
    readonly props?: SelectProps;
    readonly children?: true;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/types").RemoteComponentType<"Select", SelectProps, true>>;
import { SpinnerProps } from "./internal/interface";
export declare const Spinner: "Spinner" & {
    readonly type?: "Spinner";
    readonly props?: SpinnerProps;
    readonly children?: true;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/types").RemoteComponentType<"Spinner", SpinnerProps, true>>;
import { SwitchProps } from "./internal/interface";
export declare const Switch: "Switch" & {
    readonly type?: "Switch";
    readonly props?: SwitchProps;
    readonly children?: true;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/types").RemoteComponentType<"Switch", SwitchProps, true>>;
import { TableProps } from "./internal/interface";
export declare const Table: "Table" & {
    readonly type?: "Table";
    readonly props?: TableProps;
    readonly children?: true;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/types").RemoteComponentType<"Table", TableProps, true>>;
import { TableHeadProps } from "./internal/interface";
export declare const TableHead: "TableHead" & {
    readonly type?: "TableHead";
    readonly props?: TableHeadProps;
    readonly children?: true;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/types").RemoteComponentType<"TableHead", TableHeadProps, true>>;
import { TableBodyProps } from "./internal/interface";
export declare const TableBody: "TableBody" & {
    readonly type?: "TableBody";
    readonly props?: TableBodyProps;
    readonly children?: true;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/types").RemoteComponentType<"TableBody", TableBodyProps, true>>;
import { TableRowProps } from "./internal/interface";
export declare const TableRow: "TableRow" & {
    readonly type?: "TableRow";
    readonly props?: TableRowProps;
    readonly children?: true;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/types").RemoteComponentType<"TableRow", TableRowProps, true>>;
import { TableFooterProps } from "./internal/interface";
export declare const TableFooter: "TableFooter" & {
    readonly type?: "TableFooter";
    readonly props?: TableFooterProps;
    readonly children?: true;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/types").RemoteComponentType<"TableFooter", TableFooterProps, true>>;
import { TableCellProps } from "./internal/interface";
export declare const TableCell: "TableCell" & {
    readonly type?: "TableCell";
    readonly props?: TableCellProps;
    readonly children?: true;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/types").RemoteComponentType<"TableCell", TableCellProps, true>>;
import { TableHeaderCellProps } from "./internal/interface";
export declare const TableHeaderCell: "TableHeaderCell" & {
    readonly type?: "TableHeaderCell";
    readonly props?: TableHeaderCellProps;
    readonly children?: true;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/types").RemoteComponentType<"TableHeaderCell", TableHeaderCellProps, true>>;
import { TabProps } from "./internal/interface";
export declare const Tab: "Tab" & {
    readonly type?: "Tab";
    readonly props?: TabProps;
    readonly children?: true;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/types").RemoteComponentType<"Tab", TabProps, true>>;
import { TabPanelProps } from "./internal/interface";
export declare const TabPanel: "TabPanel" & {
    readonly type?: "TabPanel";
    readonly props?: TabPanelProps;
    readonly children?: true;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/types").RemoteComponentType<"TabPanel", TabPanelProps, true>>;
import { TabsProps } from "./internal/interface";
export declare const Tabs: "Tabs" & {
    readonly type?: "Tabs";
    readonly props?: TabsProps;
    readonly children?: true;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/types").RemoteComponentType<"Tabs", TabsProps, true>>;
import { TabListProps } from "./internal/interface";
export declare const TabList: "TabList" & {
    readonly type?: "TabList";
    readonly props?: TabListProps;
    readonly children?: true;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/types").RemoteComponentType<"TabList", TabListProps, true>>;
import { TabPanelsProps } from "./internal/interface";
export declare const TabPanels: "TabPanels" & {
    readonly type?: "TabPanels";
    readonly props?: TabPanelsProps;
    readonly children?: true;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/types").RemoteComponentType<"TabPanels", TabPanelsProps, true>>;
import { TextAreaProps } from "./internal/interface";
export declare const TextArea: "TextArea" & {
    readonly type?: "TextArea";
    readonly props?: TextAreaProps;
    readonly children?: true;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/types").RemoteComponentType<"TextArea", TextAreaProps, true>>;
import { TextFieldProps } from "./internal/interface";
export declare const TextField: "TextField" & {
    readonly type?: "TextField";
    readonly props?: TextFieldProps;
    readonly children?: true;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/types").RemoteComponentType<"TextField", TextFieldProps, true>>;
import { TooltipProps } from "./internal/interface";
export declare const Tooltip: "Tooltip" & {
    readonly type?: "Tooltip";
    readonly props?: TooltipProps;
    readonly children?: true;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/types").RemoteComponentType<"Tooltip", TooltipProps, true>>;
import { ListItemProps } from "./internal/interface";
export declare const ListItem: "ListItem" & {
    readonly type?: "ListItem";
    readonly props?: ListItemProps;
    readonly children?: true;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/types").RemoteComponentType<"ListItem", ListItemProps, true>>;
import { ListProps } from "./internal/interface";
export declare const List: "List" & {
    readonly type?: "List";
    readonly props?: ListProps;
    readonly children?: true;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/types").RemoteComponentType<"List", ListProps, true>>;
import { TailorDateFieldProps } from "./internal/interface";
export declare const TailorDateField: "TailorDateField" & {
    readonly type?: "TailorDateField";
    readonly props?: TailorDateFieldProps;
    readonly children?: true;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/types").RemoteComponentType<"TailorDateField", TailorDateFieldProps, true>>;
