{
  "version": 3,
  "sources": ["../node_modules/@stripe/src/ui/@sail/ui/index.ts", "../node_modules/@stripe/src/ui/@stripe-internal/tailor-dashboard-components/index.ts", "../node_modules/@stripe/src/ui/manual_components.ts", "../node_modules/@stripe/src/ui/index.ts", "../node_modules/invariant/browser.js", "../node_modules/@stripe/src/utils/_endpoint.ts", "../node_modules/@stripe/src/utils/oauth.ts", "../node_modules/@stripe/src/oauth.ts", "../node_modules/@stripe/src/utils/signature.ts", "../node_modules/@stripe/src/signature.ts", "../node_modules/@stripe/src/version.ts", "manifest.js", "../src/views/App.tsx", "../src/views/BalanceOverviewView.tsx", "../src/views/AppSettings.tsx"],
  "sourcesContent": [null, null, null, null, "/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n", null, null, null, null, null, null, "\n\nimport App from '../src/views/App';\n\nimport BalanceOverviewView from '../src/views/BalanceOverviewView';\n\nimport AppSettings from '../src/views/AppSettings';\n\n\nexport * from '@stripe/ui-extension-sdk/version';\nexport const BUILD_TIME = '2023-03-27 13:45:37.542767295 +0530 IST m=+6.298600754'\n\nexport {\n\t\n\tApp,\n\t\n\tBalanceOverviewView,\n\t\n\tAppSettings,\n\t\n};\nexport default {\n  \"id\": \"com.example.stripe-app_-payout\",\n  \"version\": \"0.0.2\",\n  \"name\": \"StripeRetrievalApp\",\n  \"icon\": \"\",\n  \"permissions\": [\n    {\n      \"permission\": \"secret_write\",\n      \"purpose\": \"Allows storing secrets between page reloads\"\n    }\n  ],\n  \"app_backend\": {\n    \"webhooks\": null\n  },\n  \"ui_extension\": {\n    \"views\": [\n      {\n        \"viewport\": \"stripe.dashboard.home.overview\",\n        \"component\": \"App\"\n      },\n      {\n        \"viewport\": \"stripe.dashboard.balance.overview\",\n        \"component\": \"BalanceOverviewView\"\n      },\n      {\n        \"viewport\": \"settings\",\n        \"component\": \"AppSettings\"\n      }\n    ],\n    \"content_security_policy\": {\n      \"connect-src\": [\n        \"https://stripe-backend-k7b4-jayateerthdambal.vercel.app/health-check/\"\n      ],\n      \"image-src\": null,\n      \"purpose\": \"Send data to example service\"\n    }\n  }\n}\n", "import {ContextView, Button, Box, Badge, Banner} from '@stripe/ui-extension-sdk/ui';\nimport * as React from 'react';\nimport {createOAuthState} from '@stripe/ui-extension-sdk/oauth';\nimport type {ExtensionContextValue} from '@stripe/ui-extension-sdk/context';\nimport fetchStripeSignature from '@stripe/ui-extension-sdk/signature';\n\n\nconst {useState, useEffect} = React;\n\n\nconst BACKEND_URL = 'https://stripe-backend-k7b4-jayateerthdambal.vercel.app/';\n// const BACKEND_URL = 'http://localhost:5000/'\n\nconst getRedirectURL = (mode: 'live' | 'test') => `https://dashboard.stripe.com/${mode === 'test' ? 'test/' : 'live/'}apps-oauth/com.example.oauth-example`;\n\nconst getAuthURL = (state: string, challenge: string, mode: 'live' | 'test') =>\n    BACKEND_URL + `/get-oauth-link/?response_type=code&client&redirect&state=${state}&code_challenge=${challenge}&mode=${mode}&code_challenge_method=S256`;\n\n\nconst OAuthApp = ({environment, userContext}: ExtensionContextValue) => {\n    const {mode} = environment;\n    const [authURL, setAuthURL] = useState('');\n    const [stripeStatus, setStripeStatus] = useState<string>('down');\n    const [hasSignedIn, setHasSignedIn] = useState<boolean>(true);\n\n    useEffect(() => {\n        // validateUser();\n        if (hasSignedIn) {\n            // Getting Payouts Details\n        }\n\n        createOAuthState().then(({state, challenge}) => {\n            setAuthURL(getAuthURL(state, challenge, mode));\n        });\n        const getStatus = async () => {\n            const data = await fetch(BACKEND_URL + 'health-check/', {\n                method: \"POST\",\n                headers: {\n                    'stripe-signature': await fetchStripeSignature(),\n                    'Content-type': 'application/json',\n    \n                },\n                body: JSON.stringify({\n                    user_id: userContext?.id,\n                    account_id: userContext?.account.id\n                })\n            }).then(response => response.json())\n                .then(data => {\n                    setHasSignedIn(data.hasSignedIn);\n                    setStripeStatus(data.result == 'OK' ? 'Up' : 'Down');\n                })\n    \n        }\n        getStatus();        \n        \n    }, [mode]);\n    return (\n\n        <ContextView title=\"Payout App[TEST]\">\n            <Box>Stripe is {stripeStatus}</Box>\n            {hasSignedIn &&\n                <Badge type=\"info\">You are Already Authorized to Our App!</Badge>\n            }\n            {!hasSignedIn &&\n                <Banner\n                    type=\"critical\"\n                    title=\"You have not Authorized!\"\n                    description=\"Please Authorize before you continue\"\n                    actions={\n                        <Button type=\"primary\" href={authURL} target=\"_blank\">Begin Authorize</Button>\n                    }\n                />\n            }\n        </ContextView>\n\n    )\n        ;\n\n\n};\nexport default OAuthApp;\n\n\n\n\n", "import { Box, ContextView, ListItem, List, Button, Banner, FormFieldGroup, TextField } from \"@stripe/ui-extension-sdk/ui\";\nimport type { ExtensionContextValue } from \"@stripe/ui-extension-sdk/context\";\nimport { useEffect, useState } from \"react\";\nimport { createOAuthState } from \"@stripe/ui-extension-sdk/oauth\";\nimport fetchStripeSignature from \"@stripe/ui-extension-sdk/signature\";\nimport * as React from \"react\";\n\n\nconst BACKEND_URL = 'https://stripe-backend-k7b4-jayateerthdambal.vercel.app/';\n// const BACKEND_URL = 'http://localhost:5000/'\n\nconst getAuthURL = (state: string, challenge: string, mode: 'live' | 'test') =>\n    `${BACKEND_URL}get-oauth-link/?response_type=code&client&redirect&state=${state}&code_challenge=${challenge}&mode=${mode}&code_challenge_method=S256`;\n\nconst BalanceOverviewView = ({ userContext, environment }: ExtensionContextValue) => {\n    const maxLengthForMonth: number = 2\n    const maxLengthForYear: number = 4\n    const { mode } = environment;\n    let viewData: object = {}\n    const [data, setMyData] = useState([]);\n    const [authURL, setAuthURL] = useState('');\n    const [hasSignedIn, setHasSignedIn] = useState(true)\n    const [monthValue, setMonthValue] = useState('');\n    const [yearValue, setYearValue] = useState('');\n    const [gotPayoutData, setPayoutData] = useState<boolean>(false)\n    const downloadEndpoint = `${BACKEND_URL}download-report/?account_id=${userContext?.account.id}&current_month=${monthValue}&current_year=${yearValue}`;\n\n    useEffect(() => {\n        createOAuthState().then(({ state, challenge }) => {\n            setAuthURL(getAuthURL(state, challenge, mode));\n        });\n\n\n        const getStatus = async () => {\n            const data = await fetch(BACKEND_URL + 'health-check/', {\n                method: \"POST\",\n                headers: {\n                    'stripe-signature': await fetchStripeSignature(),\n                    'Content-type': 'application/json',\n\n                },\n                body: JSON.stringify({\n                    user_id: userContext?.id,\n                    account_id: userContext?.account.id\n                })\n            }).then(response => response.json())\n                .then(data => {\n                    setHasSignedIn(data.hasSignedIn);\n\n                })\n        }\n\n        getStatus();\n    }, []);\n\n\n    // Handling DateForm Data\n    const monthValueHandler = (event) => {\n        setMonthValue(event.target.value);\n    }\n    const yearValueHandler = (event) => {\n        setYearValue(event.target.value);\n    }\n\n    const handleSubmit = async (event) => {\n        // event.preventDefault();\n        const response = await fetch(BACKEND_URL + 'get_payouts/', {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                month: monthValue,\n                year: yearValue,\n                account_id: userContext?.account.id,\n                mode: mode\n            })\n        })\n        if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json()\n        setMyData(JSON.parse(data.output_df_json));\n        setHasSignedIn(data.hasSignedIn);\n        setPayoutData(data.hasData);\n    }\n\n    let created: never[] = []\n    let descr: never[] = []\n    let amount: never[] = []\n    let net: never[] = []\n    const values = Object.values(data)\n    for (let val in values) {\n        created.push(values[val].Created)\n        descr.push(values[val].Description)\n        net.push(values[val].Net)\n    }\n    let new_created = created.map(create => new Date(create).toLocaleString(\"en-US\", {\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\",\n    }))\n\n\n    return (\n        <ContextView title=\"User Details\">\n            {hasSignedIn &&\n                <Box css={{\n                    padding: 'medium',\n                    color: 'primary',\n                    borderRadius: 'large',\n\n                }}>\n                    <FormFieldGroup legend=\"Enter Month and Year\" description=\"Enter the Year and Month from which you want to fetch data\">\n                        <TextField type=\"number\" onChange={monthValueHandler} maxLength={maxLengthForMonth} label=\"Month\" name=\"month\" placeholder=\"MM\" hiddenElements={['label']} />\n                        <TextField type=\"number\" onChange={yearValueHandler} maxLength={maxLengthForYear} label=\"Year\" name=\"year\" placeholder=\"YY\" hiddenElements={['label']} />\n                    </FormFieldGroup>\n                    <Box css={{\n                        stack: 'z',\n                        alignX: 'center',\n                        alignY: 'center',\n                        margin: 'medium'\n                    }}>\n                        <Button type=\"primary\" onPress={handleSubmit}>Get Data</Button>\n                    </Box>\n\n                </Box>\n            }\n            {gotPayoutData && hasSignedIn && <List>\n                <ListItem\n                    value={net[0]}\n                    id=\"2\"\n                    title={<Box>{new_created[0]}</Box>}\n                    secondaryTitle={<Box>{descr[0]}</Box>}\n                />\n                <ListItem\n                    value={net[1]}\n                    id=\"2\"\n                    title={<Box>{new_created[1]}</Box>}\n                    secondaryTitle={<Box>{descr[1]}</Box>}\n                />\n                <ListItem\n                    value={net[2]}\n                    id=\"2\"\n                    title={<Box>{new_created[2]}</Box>}\n                    secondaryTitle={<Box>{descr[2]}</Box>}\n                />\n                <ListItem\n                    value={net[3]}\n                    id=\"2\"\n                    title={<Box>{new_created[3]}</Box>}\n                    secondaryTitle={<Box>{descr[3]}</Box>}\n                />\n                <ListItem\n                    value={net[4]}\n                    id=\"2\"\n                    title={<Box>{new_created[4]}</Box>}\n                    secondaryTitle={<Box>{descr[4]}</Box>}\n                />\n                <ListItem\n                    value={net[5]}\n                    id=\"2\"\n                    title={<Box>{new_created[5]}</Box>}\n                    secondaryTitle={<Box>{descr[5]}</Box>}\n                />\n                <ListItem\n                    value={net[6]}\n                    id=\"2\"\n                    title={<Box>{new_created[6]}</Box>}\n                    secondaryTitle={<Box>{descr[6]}</Box>}\n                />\n                <ListItem\n                    value={net[7]}\n                    id=\"2\"\n                    title={<Box>{new_created[7]}</Box>}\n                    secondaryTitle={<Box>{descr[7]}</Box>}\n                />\n                <ListItem\n                    value={net[8]}\n                    id=\"2\"\n                    title={<Box>{new_created[8]}</Box>}\n                    secondaryTitle={<Box>{descr[8]}</Box>}\n                />\n            </List>}\n\n            <Box css={{ stack: 'y', gap: 'large', margin: 'large' }}>\n                {gotPayoutData &&\n                    <Button href={downloadEndpoint} type=\"primary\" css={{ width: 'fill', alignX: 'center' }}\n                        target=\"_blank\">Download\n                        CSV</Button>\n                }\n\n                {!hasSignedIn &&\n                    <Banner\n                        type=\"critical\"\n                        title=\"You have not Sign In\"\n                        description=\"Please sign in before you continue\"\n                        actions={\n                            <Button type=\"primary\" href={authURL} target=\"_blank\">Begin Authorize</Button>\n                        }\n                    />\n                }\n\n            </Box>\n\n        </ContextView>\n    )\n};\n\nexport default BalanceOverviewView;", "import {\n    Box,\n    Button,\n    Banner,\n    SettingsView,\n} from \"@stripe/ui-extension-sdk/ui\";\nimport type { ExtensionContextValue } from \"@stripe/ui-extension-sdk/context\";\nimport { useState, useEffect } from \"react\";\nimport { createOAuthState } from '@stripe/ui-extension-sdk/oauth';\n\nconst BACKEND_URL = 'https://stripe-backend-k7b4-jayateerthdambal.vercel.app/';\n// const BACKEND_URL = 'http://localhost:5000/'\n\nconst getAuthURL = (state: string, challenge: string, mode: 'live' | 'test') =>\n    BACKEND_URL + `/get-oauth-link/?response_type=code&client&redirect&state=${state}&code_challenge=${challenge}&mode=${mode}&code_challenge_method=S256`;\n\n\nconst AppSettings = ({ userContext, environment }: ExtensionContextValue) => {\n    const { mode } = environment;\n    const [deauth, setDeauth] = useState('');\n    const [userExist, setUserExist] = useState<boolean>(false);\n    const [authURL, setAuthURL] = useState('');\n    const deauthorize_user = async () => {\n        const data = await fetch(BACKEND_URL + 'deauthorize_user/', {\n            method: \"POST\",\n            headers: {\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify({\n                user_id: userContext?.id,\n                account_id: userContext?.account.id\n            })\n        }).then(response => response.json())\n            .then(data => setUserExist(data.userExist))\n    }\n\n    useEffect(() => {\n        createOAuthState().then(({ state, challenge }) => {\n            setAuthURL(getAuthURL(state, challenge, mode));\n        });\n        fetch(BACKEND_URL + 'check-user/', {\n            method: \"POST\",\n            headers: {\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify({\n                account_id: userContext?.account.id\n            })\n\n        }).then(response => response.json())\n            .then(data => {\n                setUserExist(data.userExist);\n            })\n    }, [mode]);\n\n\n    return (\n        <SettingsView onSave={() => {\n        }}>\n            <Box\n                css={{\n                    background: \"container\",\n                    borderRadius: \"medium\",\n                    padding: \"large\",\n                }}>\n                {userExist &&\n                    <Banner\n                        type=\"critical\"\n                        title=\"Remove Authorization\"\n                        description=\"You will no longer able to access your data through App\"\n                        actions={\n                            <Button onPress={deauthorize_user} type=\"destructive\">Remove Authorization</Button>\n                        }\n                    />\n                }\n\n                {!userExist &&\n                    <Banner\n                        type=\"default\"\n                        title=\"Begin Authorization\"\n                        description=\"You are not authorized your account with our servers, Please begin the Authorization Process\"\n                        actions={\n                            <Button href={authURL} type=\"primary\">Begin Authorization</Button>\n                        }\n                    />\n                }\n            </Box>\n        </SettingsView>\n    );\n};\n\nexport default AppSettings;\n"],
  "mappings": "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",
  "names": ["react_1", "exports", "react_1", "exports", "react_1", "exports", "ui_1", "exports", "__exportStar", "manual_components_1", "require_browser", "__commonJSMin", "exports", "module", "invariant", "condition", "format", "b", "c", "d", "e", "f", "error", "args", "argIndex", "invariant_1", "__importDefault", "getHostEndpoint", "hostEndpoint", "exports", "_endpoint_1", "createOAuthState", "state", "exports", "oauth_1", "exports", "_endpoint_1", "fetchStripeSignature", "additionalPayload", "exports", "signature_1", "exports", "exports", "manifest_exports", "__export", "App_default", "AppSettings_default", "BUILD_TIME", "BalanceOverviewView_default", "manifest_default", "import_ui", "React", "import_oauth", "import_signature", "import_jsx_runtime", "useState", "useEffect", "React", "BACKEND_URL", "getAuthURL", "state", "challenge", "mode", "BACKEND_URL", "OAuthApp", "environment", "userContext", "authURL", "setAuthURL", "useState", "stripeStatus", "setStripeStatus", "hasSignedIn", "setHasSignedIn", "useEffect", "__async", "data", "fetchStripeSignature", "response", "App_default", "import_ui", "import_react", "import_oauth", "import_signature", "import_jsx_runtime", "BACKEND_URL", "getAuthURL", "state", "challenge", "mode", "BalanceOverviewView", "userContext", "environment", "viewData", "data", "setMyData", "authURL", "setAuthURL", "hasSignedIn", "setHasSignedIn", "monthValue", "setMonthValue", "yearValue", "setYearValue", "gotPayoutData", "setPayoutData", "downloadEndpoint", "__async", "fetchStripeSignature", "response", "monthValueHandler", "event", "yearValueHandler", "handleSubmit", "created", "descr", "amount", "net", "values", "val", "new_created", "create", "BalanceOverviewView_default", "import_ui", "import_react", "import_oauth", "import_jsx_runtime", "BACKEND_URL", "getAuthURL", "state", "challenge", "mode", "AppSettings", "userContext", "environment", "deauth", "setDeauth", "userExist", "setUserExist", "authURL", "setAuthURL", "deauthorize_user", "__async", "data", "response", "AppSettings_default", "__reExport", "manifest_exports", "BUILD_TIME", "manifest_default"]
}
